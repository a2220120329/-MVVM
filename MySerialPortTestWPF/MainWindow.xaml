<Window x:Class="MySerialPortTestWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MySerialPortTestWPF"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        Title="串口通信助手---MVVM/Queue" Height="490" Width="550"
        MinHeight="490"
        MinWidth="550">
    <Border Padding="2">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                            <GradientStop Color="#00bcd4" Offset="0.0"/>
                            <GradientStop Color="#00acc1" Offset="0.4"/>
                            <GradientStop Color="#00838f" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
        </Border.Style>
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="155"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--串口设置及串口信息接收区-->
            <Grid Grid.RowSpan="2">
                <!--串口设置区-->
                <StackPanel Grid.Column="0" Margin="0 0 5 5">
                    <!--串口设置-->

                    <GroupBox Header="串口设置" Foreground="White" BorderBrush="White">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"/>
                                <ColumnDefinition Width="2.5*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--串口位-->
                            <Label Content="串口位"/>
                            <ComboBox ItemsSource="{Binding SerialPortNums}" 
                                      SelectedItem="{Binding SelectedPortNum}"
                                      Grid.Column="1"
                                      Style="{StaticResource SerialPortComoBoxStyle}" Margin="3,3,3.4,0" VerticalAlignment="Top" Width="Auto">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding UpdateSerialPortNames}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <!--波特率-->
                            <Label Content="波特率" Grid.Row="1"/>
                            <!--To Do 修改ComboBox Binding-->
                            <ComboBox ItemsSource="{Binding SerialPortBaud}"  
                                      Grid.Row="1"
                                      SelectedItem="{Binding SelectedPortBaud}"
                                      Grid.Column="1"
                                      Style="{StaticResource SerialPortComoBoxStyle}"/>

                            <!--停止位-->
                            <Label Content="停止位" Grid.Row="2"/>
                            <!--To Do 修改ComboBox Binding-->
                            <ComboBox ItemsSource="{Binding SerialPortStopBits}"  
                                      SelectedItem="{Binding SelectedPortStopBit}"
                                      Grid.Row="2"
                                      Grid.Column="1"
                                      Style="{StaticResource SerialPortComoBoxStyle}"/>
                            <!--数据位-->
                            <Label Content="数据位" Grid.Row="3"/>
                            <!--To Do 修改ComboBox Binding-->
                            <ComboBox ItemsSource="{Binding SerialPortDataBits}"  
                                      SelectedItem="{Binding SelectedPortDataBit}"
                                      Grid.Row="3"
                                      Grid.Column="1"
                                      Style="{StaticResource SerialPortComoBoxStyle}"/>
                            <!--校验位-->
                            <Label Content="校验位" Grid.Row="4"/>
                            <!--To Do 修改ComboBox Binding-->
                            <ComboBox ItemsSource="{Binding SerialPortParities}"  
                                      SelectedItem="{Binding SelectedPortParity}"
                                      Grid.Row="4"
                                      Grid.Column="1"
                                      Style="{StaticResource SerialPortComoBoxStyle}"/>
                            <!--串口操作-->
                            <Label Content="操作位" Grid.Row="5"/>
                            <StackPanel Orientation="Horizontal"
                                        Height="20"
                                          Width="80"
                                      Grid.Row="5"
                                      Grid.Column="1"
                                        HorizontalAlignment="Center">
                                <!--串口状态指示-->
                                <!--<Border Width="19" Height="19" CornerRadius="20">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=OpenPortBtn,Path=IsChecked}" Value="false">
                                                    <Setter Property="Background" Value="#bdbdbd"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=OpenPortBtn,Path=IsChecked}" Value="true">
                                                    <Setter Property="Background" Value="#76ff03"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>-->
                                <ToggleButton BorderThickness="0" Width="80"
                                              Height="20"
                                              Style="{StaticResource ToggleBtnSytle}"                                                          
                                              x:Name="OpenPortBtn"
                                              Background="Transparent"
                                              IsChecked="{Binding IsOpenBtnChecked,Mode=TwoWay,FallbackValue=false}"
                                              Command="{Binding OpenPortCommand}"
                                              Content="打开串口"/>

                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    <!--接收设置-->
                    <GroupBox Header="接收设置" Foreground="White">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <RadioButton Content="ASCII" IsChecked="{Binding IsRxAsciiChecked}"/>

                                <RadioButton Content="HEX" Margin="18 0 0 0"/>

                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="自动换行" HorizontalAlignment="Left" IsChecked="{Binding IsRxAutoReturn}"/>
                                <CheckBox Content="显示时间" HorizontalAlignment="Left" IsChecked="{Binding IsRxShowCurrTime}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="追踪最新" HorizontalAlignment="Left" IsChecked="{Binding IsScrollToEnd,FallbackValue=true}"/>
                                <Button Margin="5 5 0 2" Content="清除" Height="24" Width="50" HorizontalAlignment="Left"
                                        Foreground="White" Command="{Binding ClearRxDataCommand}"
                                        >
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border BorderBrush="White" BorderThickness="1"/>
                                                            <Label Background="Transparent" Foreground="{TemplateBinding Foreground}"
                                                                   Content="{TemplateBinding Content}"
                                                                   x:Name="BtnLabelContent"
                                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                            
                            
                        </StackPanel>
                    </GroupBox>
                    <!--串口发送设置-->
                    <Grid Grid.Row="1"
                        Background="Transparent">
                        <GroupBox Header="串口发送设置">
                            <StackPanel>
                                <!--<StackPanel Orientation="Horizontal">
                                    <RadioButton Content="ASCII" IsChecked="True"/>
                                    <RadioButton Content="HEX" Margin="10 0 0 0"/>
                                </StackPanel>-->
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <CheckBox Content="定时" Height="18" IsChecked="{Binding IsSetTimer}"/>
                                    <StackPanel Margin="10 0 0 0" Orientation="Horizontal">
                                        <TextBox Width="50"  Background="Transparent" Foreground="White"
                                                 BorderBrush="White" Height="18"
                                                 Text="{Binding RepeatTime,FallbackValue=1000,UpdateSourceTrigger=PropertyChanged}"
                                                 HorizontalContentAlignment="Center"
                                                 VerticalContentAlignment="Center"/>
                                        <Label Content="ms"/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Button Margin="0 0 0 2" Content="发送" Height="24" Width="50" HorizontalAlignment="Left"
                                        Foreground="White" Command="{Binding SendTxDataCommand}"
                                        >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <Border BorderBrush="White" BorderThickness="1"/>
                                                                <Label Background="Transparent" Foreground="{TemplateBinding Foreground}"
                                                                   Content="{TemplateBinding Content}"
                                                                   x:Name="BtnLabelContent"
                                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Label Content="状态:"/>
                                    <TextBlock Margin="0 -1 0 0" Text="{Binding TxDataState, FallbackValue=已停止}" VerticalAlignment="Center" Foreground="White"/>
                                </StackPanel>
                                
                            </StackPanel>
                        </GroupBox>
                    </Grid>
                    <!--串口状态显示区-->
                    <Grid Grid.Row="2" Grid.ColumnSpan="2" Background="Transparent">
                        <GroupBox Header="串口状态">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="状态:"/>
                                    <Label Content="{Binding ElementName=OpenPortBtn,Path=IsChecked}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="发送:"/>
                                    <Label Content="{Binding SendNums,FallbackValue=0}"/>
                                    <Label Content="Bytes"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="接收:"/>
                                    <Label Content="{Binding ElementName=RxTextBox,Path=Text.Length,FallbackValue=0}"/>
                                    <Label Content="Bytes"/>
                                </StackPanel>
                            </StackPanel>

                        </GroupBox>
                    </Grid>
                    <Label Height="30" Grid.Row="2" Content="刘建志 2018/11/23"/>
                    <!-- ComboboxStyle-->
                    <!--<ComboBox SelectedIndex="0" Foreground="White">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Setter Property="Template" >
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBox}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0.7*"/>
                                                    <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                                                </Grid.ColumnDefinitions>
                                                -->
                    <!--文字区域背景和边线样式-->
                    <!--
                                                <TextBox Background="Transparent" VerticalAlignment="Center"  Grid.Column="0" Foreground="White" BorderBrush="#03ffea" BorderThickness="0" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}"></TextBox>
                                                <Border  Grid.Column="0" BorderThickness="1" BorderBrush="White" CornerRadius="1,0,0,1">
                                                </Border>
                                                -->
                    <!--右侧下拉button设置-->
                    <!--
                                                <Border Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="White" CornerRadius="0,1,1,0">
                                                <ToggleButton BorderThickness="3" BorderBrush="White"  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                                                </Border>
                                                -->
                    <!--弹出popup整体设置-->
                    <!--
                                                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" >
                                                    -->
                    <!--弹出popup边框-->
                    <!--
                                                    <Border CornerRadius="1" BorderBrush="White" BorderThickness="1,0,1,1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                                        <Border.Effect>
                                                            <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="1"/>
                                                        </Border.Effect>
                                                        -->
                    <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                    <!--
                                                        <ScrollViewer Margin="0,0,0,0"   SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderBrush="White" BorderThickness="2" >
                                                            -->
                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                    <!--
                                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="Transparent" />
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.Style>
                        <ComboBoxItem Content="Hello"/>
                        <ComboBoxItem Content="World"/>
                    </ComboBox>-->
                </StackPanel>
            </Grid>
            <!--串口接收区-->
            <Grid Grid.Column="1" Grid.RowSpan="2" Margin="0 0 0 5" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <TextBox AcceptsReturn="True"
                         Margin="0 8 0 0"
                         x:Name="RxTextBox"
                             VerticalScrollBarVisibility="Auto"
                             IsUndoEnabled="False"
                             TextWrapping="Wrap" 
                             IsReadOnly="True"
                             Background="Transparent"
                             BorderThickness="2"
                             Foreground="White"
                             BorderBrush="White"
                             Text="{Binding Rx_Str}"
                               />
                <TextBox AcceptsReturn="True"  
                         Grid.Row="1"
                         Margin="0 8 0 0"
                             VerticalScrollBarVisibility="Auto"
                             IsUndoEnabled="True"
                             TextWrapping="Wrap" 
                              Text="{Binding TxData,UpdateSourceTrigger=PropertyChanged}"
                             Background="Transparent"
                             BorderThickness="2"
                             Foreground="White"
                             BorderBrush="White"
                             
                               />
                
            </Grid>
        </Grid>
    </Border>

</Window>
